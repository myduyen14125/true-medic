{"remainingRequest":"/home/yuu/Documents/Git/blog-vue-router/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/yuu/Documents/Git/blog-vue-router/src/components/uncommon/Blogs/Pagination.vue?vue&type=style&index=0&id=7111df23&scoped=true&lang=css&","dependencies":[{"path":"/home/yuu/Documents/Git/blog-vue-router/src/components/uncommon/Blogs/Pagination.vue","mtime":1625819026667},{"path":"/home/yuu/Documents/Git/blog-vue-router/node_modules/css-loader/dist/cjs.js","mtime":1624411123181},{"path":"/home/yuu/Documents/Git/blog-vue-router/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1624411123046},{"path":"/home/yuu/Documents/Git/blog-vue-router/node_modules/postcss-loader/src/index.js","mtime":1624411123023},{"path":"/home/yuu/Documents/Git/blog-vue-router/node_modules/cache-loader/dist/cjs.js","mtime":1624411119168},{"path":"/home/yuu/Documents/Git/blog-vue-router/node_modules/vue-loader/lib/index.js","mtime":1624411123046}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnBhZ2luYXRpb257CiAgcGFkZGluZzogMTBweDsKICB3aWR0aDogMjUwcHg7CiAgbWFyZ2luOiBhdXRvOwp9Ci5wYWdpbmF0aW9uLWJ0biB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGN1cnNvcjogcG9pbnRlcjsKICBtYXJnaW46IDAgMTBweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQ7CiAgdHJhbnNpdGlvbjogMC4zczsKfQoucGFnaW5hdGlvbi1idG46aG92ZXJ7CiAgY29sb3I6IGJsYWNrOwp9Cg=="},{"version":3,"sources":["Pagination.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Pagination.vue","sourceRoot":"src/components/uncommon/Blogs","sourcesContent":["<template>\n  <div v-if=\"totalPages() > 0\" class=\"pagination\">\n    <span v-if=\"showPrevious()\" class=\"pagination-btn\" @click=\"updatePage(currentPage - 1)\"> Previous </span>\n\n    {{ currentPage + 1 }} of {{ totalPages() }}\n\n    <span v-if=\"showNext()\" class=\"pagination-btn\" @click=\"updatePage(currentPage + 1)\"> Next </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'pagination',\n  props: ['blogs', 'currentPage', 'pageSize'],\n  methods: {\n    updatePage(pageNumber) {\n      this.$emit('updatePage', pageNumber)\n    },\n    totalPages(){\n      //return the smallest integer greater than or equal given number\n      return Math.ceil(this.blogs.length / this.pageSize);\n    },\n    showPrevious() {\n      return this.currentPage == 0 ? false : true;\n    },\n    showNext() {\n      return this.currentPage == (this.totalPages() -1) ? false : true;\n    }\n  }\n};\n</script>\n\n<style scoped>\n.pagination{\n  padding: 10px;\n  width: 250px;\n  margin: auto;\n}\n.pagination-btn {\n  display: inline-block;\n  cursor: pointer;\n  margin: 0 10px;\n  border-bottom: 1px solid;\n  transition: 0.3s;\n}\n.pagination-btn:hover{\n  color: black;\n}\n</style>\n"]}]}